name: Maintainer merge (comment)

# triggers the action when
on:
  # the PR receives a comment
  issue_comment:
    types: [created, edited]
  # the PR receives a review
  pull_request_review:
    # triggers on a review, whether or not it is accompanied by a comment
    types: [submitted]
  # the PR receives a review comment
  pull_request_review_comment:
    types: [created, edited]

jobs:
  ping_zulip:
    # we set some variables. The ones of the form `${{ X }}${{ Y }}` are typically not
    # both set simultaneously: depending on the event that triggers the PR, usually only one is set
    env:
      AUTHOR: ${{ github.event.comment.user.login }}${{ github.event.review.user.login }}
      PR_NUMBER: ${{ github.event.issue.number }}${{ github.event.pull_request.number }}
      COMMENT_EVENT: ${{ github.event.comment.body }}
      COMMENT_REVIEW: ${{ github.event.review.body }}
      PR_TITLE_ISSUE: ${{ github.event.issue.title }}
      PR_TITLE_PR: ${{ github.event.pull_request.title }}
      PR_URL: ${{ github.event.issue.html_url }}${{ github.event.pull_request.html_url }}
      EVENT_NAME: ${{ github.event_name }}

    name: Ping maintainers on Zulip
    runs-on: ubuntu-latest
    steps:
      - name: Find maintainer merge/delegate
        id: form_the_message
        run: |
          printf $'github.event.action: \'%s\'\n\n' "${{ github.event.action }}"
          COMMENT="${COMMENT_EVENT}${COMMENT_REVIEW}"
          message="$(
            ./scripts/maintainer_merge_message.sh "${AUTHOR}" "${COMMENT}" "${M_or_D}" "${EVENT_NAME}" "${PR_NUMBER}" "${PR_URL}" "${PR_TITLE}"
          )"
          printf $'%s\n' "${message}"
          printf $'message=%s\n' "${message}" > "${GITHUB_OUTPUT}"

      - name: Check whether user is part of mathlib-reviewers team
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        uses: TheModdingInquisition/actions-team-membership@v1.0
        with:
          organization: 'leanprover-community'
          team: 'mathlib-reviewers' # required. The team to check for
          token: ${{ secrets.MATHLIB_REVIEWERS_TEAM_KEY }} # required. Personal Access Token with the `read:org` permission
          comment: 'You seem to not be authorized' # optional. A comment to post if the user is not part of the team.
                                                  # This feature is only applicable in an issue (or PR) context
          exit: true # optional. If the action should exit if the user is not part of the team. Defaults to true.

      - name: Checkout
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        uses: actions/checkout@v4

      - name: Determine Zulip topic
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        id: determine_topic
        run: |
          ./scripts/get_tlabel.sh "${PR}" >> "$GITHUB_OUTPUT"
        env:
          PR:  /repos/leanprover-community/mathlib4/issues/${{ github.event.issue.number }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Send message on Zulip
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        uses: zulip/github-actions-zulip/send-message@v1
        with:
          api-key: ${{ secrets.ZULIP_API_KEY }}
          email: 'github-mathlib4-bot@leanprover.zulipchat.com'
          organization-url: 'https://leanprover.zulipchat.com'
          to: 'mathlib reviewers'
          type: 'stream'
          topic: ${{ steps.determine_topic.outputs.topic }}
          content: ${{ steps.form_the_message.outputs.message }}

      - name: Add comment to PR
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        uses: GrantBirki/comment@v2
        with:
          issue-number: 18736 # ${{ github.event.issue.number }}
          body: |
            ðŸš€ Pull request has been placed on the maintainer queue by ${{ github.event.comment.user.login }}.
            ${{ steps.form_the_message.outputs.message }}

      - name: Add label to PR
        if: ${{ ! steps.form_the_message.outputs.message == '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo, number: issue_number } = context.issue;
            await github.rest.issues.addLabels({ owner, repo, issue_number, labels: ['maintainer-merge'] });
